ws$ = rxjs.webSocket.webSocket('wss://ws-feed.pro.coinbase.com')
ws$.next({
  "type": "subscribe",
  "product_ids": [
    "ETH-USD",
  ],
  "channels": [
    "heartbeat",
    {
      "name": "ticker",
      "product_ids": [
        "ETH-USD",
      ]
    }
  ]
})

let price$ = ws$.pipe(
  rxjs.operators.filter(v => v.type === 'ticker'),
  rxjs.operators.map(v => parseFloat(v.price)),
)

let average$ = price$.pipe(
  rxjs.operators.scan((acc, cur) => [...acc, cur], []),
  rxjs.operators.map(prices => prices.reduce((a, c) => a + c, 0) / prices.length),
)

let createChartData = (labels, series) => ({labels, series})

let pricesData = createChartData([], [[], []])
let pricesChart = new Chartist.Line('.prices', pricesData)

rxjs.zip(
  price$,
  average$,
).subscribe(([price, average]) => {
  console.log(price, average)
  pricesChart.update(
    createChartData(
      [],
      [
        [...pricesChart.data.series[0], price],
        [...pricesChart.data.series[1], average],
      ]
    )
  )
})

